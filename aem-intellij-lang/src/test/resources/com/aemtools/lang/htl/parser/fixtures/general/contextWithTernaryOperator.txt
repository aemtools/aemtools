HtlFile:contextWithTernaryOperator.html
  HtlOuterLangImpl([Htl] OUTER_LANG)
    PsiElement([Htl] OUTER_LANGUAGE)('<div data-sly-use.bean="')
  HtlHtlElImpl([Htl] HTL_EL)
    HtlHelStartImpl([Htl] HEL_START)
      PsiElement([Htl] ${)('${')
    HtlHelImpl([Htl] HEL)
      HtlExpressionImpl([Htl] EXPRESSION)
        HtlStatementImpl([Htl] STATEMENT)
          HtlOperationImpl([Htl] OPERATION)
            HtlOperandImpl([Htl] OPERAND)
              HtlLiteralImpl([Htl] LITERAL)
                HtlStringLiteralImpl([Htl] STRING_LITERAL)
                  PsiElement([Htl] ')(''')
                  PsiElement([Htl] STRING_CONTENT)('com.package.BeanClass')
                  PsiElement([Htl] ')(''')
    PsiWhiteSpace(' ')
    PsiElement([Htl] @)('@')
    PsiWhiteSpace(' ')
    HtlContextExpressionImpl([Htl] CONTEXT_EXPRESSION)
      HtlAssignmentImpl([Htl] ASSIGNMENT)
        HtlVariableNameImpl([Htl] VARIABLE_NAME)
          PsiElement([Htl] VAR_NAME)('param')
        PsiElement([Htl] =)('=')
        HtlAssignmentValueImpl([Htl] ASSIGNMENT_VALUE)
          HtlOperationImpl([Htl] OPERATION)
            HtlOperandImpl([Htl] OPERAND)
              HtlPropertyAccessImpl([Htl] PROPERTY_ACCESS)
                HtlVariableNameImpl([Htl] VARIABLE_NAME)
                  PsiElement([Htl] VAR_NAME)('properties')
                HtlAccessIdentifierImpl([Htl] ACCESS_IDENTIFIER)
                  HtlDotAccessImpl([Htl] DOT_ACCESS)
                    PsiElement([Htl] .)('.')
                    HtlVariableNameImpl([Htl] VARIABLE_NAME)
                      PsiElement([Htl] VAR_NAME)('enabled')
    PsiWhiteSpace(' ')
    PsiErrorElement:<access identifier>, <logical operator>, '[Htl] ,' or '[Htl] }' expected, got '?'
      PsiElement([Htl] ?)('?')
    PsiWhiteSpace(' ')
    PsiElement([Htl] true)('true')
    PsiWhiteSpace(' ')
    PsiElement([Htl] :)(':')
    PsiWhiteSpace(' ')
    PsiElement([Htl] false)('false')
    PsiElement([Htl] })('}')
  HtlOuterLangImpl([Htl] OUTER_LANG)
    PsiElement([Htl] OUTER_LANGUAGE)('">\n\n</div>')